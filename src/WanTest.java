
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author pc
 */
public class WanTest extends javax.swing.JFrame {

    /**
     * Creates new form WanTest
     */
    static testNet2 openDashboard = new testNet2();

    public WanTest() {
        initComponents();
        this.setTitle("WAN Test");
        this.setSize(440, 330);
        getWLANbssidInfo();
        setLocationOfProperties();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.jpg")));

    }

    public void setLocationOfProperties() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        //height of the task bar
        Insets scnMax = Toolkit.getDefaultToolkit().getScreenInsets(getGraphicsConfiguration());
        int taskBarSize = scnMax.bottom;
//available size of the screen
        //setLocation(screenSize.width - getWidth(), screenSize.height - taskBarSize - getHeight());
        // NetworkList();

        //*************
        try {
            if (openDashboard.frameVisible) {
                setLocation(screenSize.width - getWidth(), screenSize.height - taskBarSize - getHeight() - openDashboard.getHeight());
            } else {
                setLocation(screenSize.width - getWidth(), screenSize.height - taskBarSize - getHeight());
            }
        } catch (Exception e) {
            System.out.print(e.getMessage());
        }
        //*************

    }

    public void getWLANbssidInfo() {
        String cmd = "netsh wlan show network mode=bssid";

        try {

            Process p3;
            p3 = Runtime.getRuntime().exec("cmd /c " + cmd);
            p3.waitFor();
            BufferedReader reader = new BufferedReader(new InputStreamReader(p3.getInputStream()));
            String line = reader.readLine();
            while (line != null) {
                wlanResults.append(line + "\n");
                System.out.println(line);
                line = reader.readLine();
            }
        } catch (IOException ex) {

            wlanResults.append("Comand error\n" + ex);
            System.out.println("There was an IO exception.");

        } catch (InterruptedException ex) {
            Logger.getLogger(WanTest.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        wlanResults = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        wlanResults.setEditable(false);
        wlanResults.setBackground(new java.awt.Color(102, 0, 102));
        wlanResults.setColumns(20);
        wlanResults.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        wlanResults.setForeground(new java.awt.Color(255, 255, 255));
        wlanResults.setRows(5);
        wlanResults.setMargin(new java.awt.Insets(5, 10, 1, 1));
        jScrollPane1.setViewportView(wlanResults);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(215, 293));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WanTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WanTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea wlanResults;
    // End of variables declaration//GEN-END:variables
}
